/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventoryproject;
import inventoryproject.C.AccountManagerProcess;
import javax.swing.JOptionPane;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import inventoryproject.C.Accounts;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.util.Arrays;
/**
 *
 * @author NEC
 */
public class AccountManager extends javax.swing.JFrame {

    AccountManagerProcess manageAccount = new AccountManagerProcess();  //instantiate an AccountManagerProcess object inorder to use all the methods inside of the class
    int toBeUpdated = 0;    //this will save the index of the account to be updated
    /**
     * Creates new form AccountManager
     */
    public AccountManager() {
        initComponents();
        centerWindow(this); //puts the window in the center
        setResizable(false);//disable user to resize window
        try{
            manageAccount.readAllAccounts(true);    //will read all the accounts in the admin and cashier user files
            manageAccount.readAllAccounts(false);
            setTable(); //set the contents of the table
        }catch(IOException e){  //something wrong has happened
            JOptionPane.showMessageDialog(rootPane, "Error reading the file!", "Error", JOptionPane.ERROR_MESSAGE);
            dispose();  //disposes the frame and goes back to the main menu of the admin
            MainMenuAdmin admin = new MainMenuAdmin();
            admin.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountManagerMain = new javax.swing.JPanel();
        ManageAccountLbl1 = new javax.swing.JLabel();
        ManageAccountDeleteAccBtn1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ManageAccountTable = new javax.swing.JTable();
        ManageAccountEditAccBtn = new javax.swing.JButton();
        ManageAccountLogo = new javax.swing.JLabel();
        ManageAccountBackBtn = new javax.swing.JLabel();
        key = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        accountManagerEdit = new javax.swing.JPanel();
        accEditBackBtn = new javax.swing.JLabel();
        accEditUsernameLbl = new javax.swing.JLabel();
        accEditUsernameTxtField = new javax.swing.JTextField();
        accEditLbl = new javax.swing.JLabel();
        accEditPasswordLbl = new javax.swing.JLabel();
        accEditSaveBtn = new javax.swing.JButton();
        accEditUsernameLbl1 = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        state = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Momentum - Account Manager");
        getContentPane().setLayout(new java.awt.CardLayout());

        accountManagerMain.setBackground(new java.awt.Color(223, 223, 223));
        accountManagerMain.setToolTipText("");
        accountManagerMain.setMinimumSize(new java.awt.Dimension(1098, 651));
        accountManagerMain.setPreferredSize(new java.awt.Dimension(1098, 651));
        accountManagerMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ManageAccountLbl1.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        ManageAccountLbl1.setForeground(new java.awt.Color(255, 255, 255));
        ManageAccountLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ManageAccountLbl1.setText("Account Manager");
        accountManagerMain.add(ManageAccountLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 231, 25));

        ManageAccountDeleteAccBtn1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        ManageAccountDeleteAccBtn1.setText("Delete Account");
        ManageAccountDeleteAccBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageAccountDeleteAccBtn1ActionPerformed(evt);
            }
        });
        accountManagerMain.add(ManageAccountDeleteAccBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 130, 49));

        ManageAccountTable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        ManageAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Standing", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ManageAccountTable);

        accountManagerMain.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 710, -1));

        ManageAccountEditAccBtn.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        ManageAccountEditAccBtn.setText("Edit Account");
        ManageAccountEditAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageAccountEditAccBtnActionPerformed(evt);
            }
        });
        accountManagerMain.add(ManageAccountEditAccBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 130, 49));

        ManageAccountLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/logo.png"))); // NOI18N
        accountManagerMain.add(ManageAccountLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, -1, -1));

        ManageAccountBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/back button.png"))); // NOI18N
        ManageAccountBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ManageAccountBackBtnMouseClicked(evt);
            }
        });
        accountManagerMain.add(ManageAccountBackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 37, -1));

        key.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        key.setText("View SIgn In Key");
        key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed(evt);
            }
        });
        accountManagerMain.add(key, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 130, 49));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/redCar.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        accountManagerMain.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 360, 650));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/tires bg.png"))); // NOI18N
        accountManagerMain.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 820, 650));

        getContentPane().add(accountManagerMain, "card2");

        accountManagerEdit.setBackground(new java.awt.Color(223, 223, 223));
        accountManagerEdit.setToolTipText("");
        accountManagerEdit.setMinimumSize(new java.awt.Dimension(1098, 651));
        accountManagerEdit.setPreferredSize(new java.awt.Dimension(1098, 651));
        accountManagerEdit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        accEditBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/back button.png"))); // NOI18N
        accEditBackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accEditBackBtnMouseClicked(evt);
            }
        });
        accountManagerEdit.add(accEditBackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 37, -1));

        accEditUsernameLbl.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        accEditUsernameLbl.setForeground(new java.awt.Color(255, 255, 255));
        accEditUsernameLbl.setText("Username:");
        accountManagerEdit.add(accEditUsernameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, -1, -1));

        accEditUsernameTxtField.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        accEditUsernameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accEditUsernameTxtFieldActionPerformed(evt);
            }
        });
        accountManagerEdit.add(accEditUsernameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 386, -1));

        accEditLbl.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        accEditLbl.setForeground(new java.awt.Color(255, 255, 255));
        accEditLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accEditLbl.setText("Edit Account");
        accountManagerEdit.add(accEditLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 231, 25));

        accEditPasswordLbl.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        accEditPasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        accEditPasswordLbl.setText("Password:");
        accountManagerEdit.add(accEditPasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, -1, -1));

        accEditSaveBtn.setBackground(new java.awt.Color(189, 3, 2));
        accEditSaveBtn.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        accEditSaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        accEditSaveBtn.setText("Save");
        accEditSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accEditSaveBtnActionPerformed(evt);
            }
        });
        accountManagerEdit.add(accEditSaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 480, 129, -1));

        accEditUsernameLbl1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        accEditUsernameLbl1.setForeground(new java.awt.Color(255, 255, 255));
        accEditUsernameLbl1.setText("Standing:");
        accountManagerEdit.add(accEditUsernameLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 380, -1, -1));

        newPasswordField.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        accountManagerEdit.add(newPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 386, 26));

        state.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        state.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Cashier User" }));
        accountManagerEdit.add(state, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 372, 386, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/tires bg.png"))); // NOI18N
        accountManagerEdit.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(accountManagerEdit, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //set all the contents of all the tables
    private void setTable(){
        DefaultTableModel model = (DefaultTableModel) ManageAccountTable.getModel();    //gets the model of the table
        model.setRowCount(0);   //initialize it to zero inorder to clear all the contents
        
        //iterate while entering all the contents of the arraylist ListOfAccount in the table
        for(Accounts c: manageAccount.listOfAccount){
            String[] string = {c.getStanding(), c.getUserNameDecrypted(), "********************"};
            model.addRow(string);
        }
    }
    
    //these will reverse the char array, ...., it is used in deletion
    public void reverseArray(int[] array){
        for(int i = 0; i < array.length / 2; i++){  //iterate while swapping the all the ends of the array until the target arrives at the center of the array
            int temp = array[i];
            array[i] = array[array.length - i - 1];
            array[array.length - i - 1] = temp;
        }
    }
    
    //deletes an account in the arraylist as well in the tables
    private void ManageAccountDeleteAccBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageAccountDeleteAccBtn1ActionPerformed
        int[] index = ManageAccountTable.getSelectedRows(); //get all the selected objects' index in table as an array
        
        if(index.length == 0)   //this checks if the user has selected an object in the table
            JOptionPane.showMessageDialog(rootPane, "Please select an account!", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            //sanity check
            if(JOptionPane.showConfirmDialog(null, "Continue?", "Confirmation", JOptionPane.OK_CANCEL_OPTION) == 0){
                Arrays.sort(index, 0, index.length);    //sorts the array for the proper deletion
                reverseArray(index);    //reverse the array for the proper deletion
                for(int c: index)   //iterate while deleting the selected accounts through indexing
                    manageAccount.deleteAccount(c);
                setTable(); //sets the table
                JOptionPane.showMessageDialog(null, "Delete Successfully!", "", JOptionPane.INFORMATION_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(null, "Operation cancelled!", "", JOptionPane.INFORMATION_MESSAGE);
                
        }
    }//GEN-LAST:event_ManageAccountDeleteAccBtn1ActionPerformed

    //for editing or updating the accounts
    private void ManageAccountEditAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageAccountEditAccBtnActionPerformed
        int[] index = ManageAccountTable.getSelectedRows(); //gets rhe selected objects' index in the table
        
        if(index.length == 0)   //if the user clicked any objects in the table
            JOptionPane.showMessageDialog(rootPane, "Please select an account!", "Error", JOptionPane.ERROR_MESSAGE);
        else if(index.length > 1)   //if the selected object is more than one
            JOptionPane.showMessageDialog(rootPane, "Please select only one account!", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            toBeUpdated = index[0]; //store the idex to this variable for the updating of the selected account
            accEditUsernameTxtField.setText(manageAccount.listOfAccount.get(toBeUpdated).getUserNameDecrypted()); //set the text to the textfield username and password
            newPasswordField.setText(manageAccount.listOfAccount.get(toBeUpdated).getPasswordDecrypted());
            
            if(manageAccount.listOfAccount.get(toBeUpdated).getStanding().equals("Admin"))  //set the combobox to 0 or 1 to represent the standing of each account
                state.setSelectedIndex(0);
            else
                state.setSelectedIndex(1);
            
            accountManagerMain.setVisible(false); 
            accountManagerEdit.setVisible(true);
        }
        
        
    }//GEN-LAST:event_ManageAccountEditAccBtnActionPerformed

    //this save all the data to the files
    private void ManageAccountBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManageAccountBackBtnMouseClicked
        manageAccount.saveProgress();       //saves all the datas into their respective files
        dispose();  //dispose the frame
        MainMenuAdmin menu = new MainMenuAdmin();   //for the menu
        menu.setVisible(true);
    }//GEN-LAST:event_ManageAccountBackBtnMouseClicked

    private void keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyActionPerformed
        SignInKey signInKey = new SignInKey();
        signInKey.setVisible(true);
    }//GEN-LAST:event_keyActionPerformed

    //this is the process of editing the accounts
    private void accEditSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accEditSaveBtnActionPerformed
        //colllects all the user's input
        String newUserName = accEditUsernameTxtField.getText();
        String newPassword =  String.valueOf(newPasswordField.getPassword());
        String newStanding = "" + state.getSelectedItem();

        if(manageAccount.userNameExist(newUserName, toBeUpdated))   //checks if the username already exist in a certain standing or position
        JOptionPane.showMessageDialog(rootPane, "Username already exist!", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            if(!newUserName.equalsIgnoreCase("") && !newPassword.equals("") && !newStanding.equals("")){    //checks if the user does not enter in the login fom
                if(JOptionPane.showConfirmDialog(rootPane, "Continue?", "Confirmation", JOptionPane.OK_CANCEL_OPTION) == 0){    //sanity check
                    manageAccount.listOfAccount.get(toBeUpdated).setUserNameDecrypted(newUserName); //updates all the information of the account
                    manageAccount.listOfAccount.get(toBeUpdated).setPasswordDecrypted(newPassword);
                    manageAccount.listOfAccount.get(toBeUpdated).setStanding(newStanding);
                    manageAccount.listOfAccount.get(toBeUpdated).setShuffledList(manageAccount.createShuffledList());
                    manageAccount.listOfAccount.get(toBeUpdated).setUserName(manageAccount.encryptData(newUserName.toCharArray(), manageAccount.listOfAccount.get(toBeUpdated).getShuffledList()));
                    manageAccount.listOfAccount.get(toBeUpdated).setPassword(manageAccount.encryptData(newPassword.toCharArray(), manageAccount.listOfAccount.get(toBeUpdated).getShuffledList()));
                    setTable(); //sets table
                    JOptionPane.showMessageDialog(rootPane, "Update Successfully!", "", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                JOptionPane.showMessageDialog(rootPane, "Operation Cancelled!", "", JOptionPane.INFORMATION_MESSAGE);
                accountManagerEdit.setVisible(false);
                accountManagerMain.setVisible(true);
            }
            else
            JOptionPane.showMessageDialog(rootPane, "Please fillup the following!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accEditSaveBtnActionPerformed

    private void accEditUsernameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accEditUsernameTxtFieldActionPerformed

    }//GEN-LAST:event_accEditUsernameTxtFieldActionPerformed

    //this will redirect the user to the  main menu
    private void accEditBackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accEditBackBtnMouseClicked
        accountManagerEdit.setVisible(false);
        accountManagerMain.setVisible(true);
    }//GEN-LAST:event_accEditBackBtnMouseClicked
    //for centering the the window
    private void centerWindow(Window w)
    {
    Toolkit tk = Toolkit.getDefaultToolkit();
    Dimension d = tk.getScreenSize();
    setLocation((d.width-w.getWidth())/2,
    (d.height-w.getHeight())/2);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ManageAccountBackBtn;
    private javax.swing.JButton ManageAccountDeleteAccBtn1;
    private javax.swing.JButton ManageAccountEditAccBtn;
    private javax.swing.JLabel ManageAccountLbl1;
    private javax.swing.JLabel ManageAccountLogo;
    private javax.swing.JTable ManageAccountTable;
    private javax.swing.JLabel accEditBackBtn;
    private javax.swing.JLabel accEditLbl;
    private javax.swing.JLabel accEditPasswordLbl;
    private javax.swing.JButton accEditSaveBtn;
    private javax.swing.JLabel accEditUsernameLbl;
    private javax.swing.JLabel accEditUsernameLbl1;
    private javax.swing.JTextField accEditUsernameTxtField;
    private javax.swing.JPanel accountManagerEdit;
    private javax.swing.JPanel accountManagerMain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton key;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JComboBox<String> state;
    // End of variables declaration//GEN-END:variables
}
